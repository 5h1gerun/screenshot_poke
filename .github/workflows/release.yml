name: Notify Discord on Release

on:
  release:
    types: [published, edited, prereleased]
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

    steps:
      - name: Build fancy embed payload
        run: |
          set -euo pipefail
          E="$GITHUB_EVENT_PATH"

          ACTION=$(jq -r '.action' "$E")
          REPO="$GITHUB_REPOSITORY"
          NAME=$(jq -r '.release.name // empty' "$E")
          TAG=$(jq -r '.release.tag_name' "$E")
          URL=$(jq -r '.release.html_url' "$E")
          BODY=$(jq -r '.release.body // ""' "$E")
          AVATAR=$(jq -r '.release.author.avatar_url // ""' "$E")
          PUBLISHED_AT=$(jq -r '.release.published_at // .release.created_at // ""' "$E")

          SNIP=$(printf "%s" "$BODY" | tr -d '\r' | tr '\n' ' ' | sed 's/  \+/ /g' | cut -c1-380)
          [ -n "$BODY" ] && [ "${#BODY}" -gt "${#SNIP}" ] && SNIP="${SNIP}…"

          ASSETS_TXT=$(jq -r '[.release.assets[]? | {name, url: .browser_download_url}] | .[:3] | if length==0 then "" else ( map("[" + .name + "](" + .url + ")") | join("\n") ) end' "$E")
          FIRST_ASSET_URL=$(jq -r '.release.assets[0]?.browser_download_url // ""' "$E")

          case "$ACTION" in
            published)   COLOR=3066993 ;;
            edited)      COLOR=15844367 ;;
            prereleased) COLOR=10181046 ;;
            *)           COLOR=5814783 ;;
          esac

          PREFIX="ℹ️ リリース"
          [ "$ACTION" = "published" ]   && PREFIX="🚀 公開"
          [ "$ACTION" = "edited" ]      && PREFIX="✏️ 更新"
          [ "$ACTION" = "prereleased" ] && PREFIX="🧪 プレリリース"
          TITLE="$PREFIX: ${NAME:-$TAG}"

          EMBED=$(jq -nc \
            --arg title "$TITLE" \
            --arg url "$URL" \
            --arg desc "${SNIP:-$REPO のリリースです}" \
            --arg repo "$REPO" \
            --arg tag "$TAG" \
            --arg footer "action: $ACTION" \
            --arg avatar "$AVATAR" \
            --arg assets "$ASSETS_TXT" \
            --arg ts "$PUBLISHED_AT" \
            --argjson color "$COLOR" \
            '{
              username: "GitHub • Releases",
              avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              embeds: [{
                title: $title, url: $url, description: $desc, color: $color,
                author: { name: $repo, icon_url: "https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png" },
                thumbnail: (if $avatar != "" then {url: $avatar} else null end),
                timestamp: (if $ts != "" then $ts else (now|todate) end),
                fields: (
                  [
                    {name:"Repository", value:$repo, inline:true},
                    {name:"Tag",        value:$tag,  inline:true}
                  ] + (if $assets != "" then [{name:"Assets (top 3)", value:$assets, inline:false}] else [] end)
                ),
                footer: { text: $footer }
              }]
            }')

          if [ -n "$FIRST_ASSET_URL" ]; then
            EMBED=$(echo "$EMBED" | jq --arg rel "$URL" --arg dl "$FIRST_ASSET_URL" \
              '. + {components: [{type:1, components:[
                  {type:2, style:5, label:"Open Release", url:$rel},
                  {type:2, style:5, label:"Download (1st asset)", url:$dl}
              ]}]}')
          else
            EMBED=$(echo "$EMBED" | jq --arg rel "$URL" \
              '. + {components: [{type:1, components:[
                  {type:2, style:5, label:"Open Release", url:$rel}
              ]}]}')
          fi

          printf '%s\n' "$EMBED" > payload.json

      - name: Send to Discord
        run: |
          set -euo pipefail
          curl -sS -H "Content-Type: application/json; charset=utf-8" \
               -X POST --data-binary @payload.json \
               "$WEBHOOK"
